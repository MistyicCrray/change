package com.barter.mapper;

import com.barter.model.Product;
import java.util.List;
import java.util.Map;

import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

@Mapper
public interface ProductMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_product
     *
     * @mbg.generated Wed Nov 13 22:38:05 CST 2019
     */
    @Delete({
        "delete from t_product",
        "where id = #{id,jdbcType=VARCHAR}"
    })
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_product
     *
     * @mbg.generated Wed Nov 13 22:38:05 CST 2019
     */
    @Insert({
        "insert into t_product (id, name, ",
        "category, price, ",
        "detail, create_date, ",
        "update_date, create_by, ",
        "update_by, img, user_id, ",
        "hits, faver, status, ",
        "quality, change_what, ",
        "old_price)",
        "values (#{id,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, ",
        "#{category,jdbcType=VARCHAR}, #{price,jdbcType=DOUBLE}, ",
        "#{detail,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, ",
        "#{updateDate,jdbcType=TIMESTAMP}, #{createBy,jdbcType=VARCHAR}, ",
        "#{updateBy,jdbcType=VARCHAR}, #{img,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, ",
        "#{hits,jdbcType=INTEGER}, #{faver,jdbcType=INTEGER}, #{status,jdbcType=VARCHAR}, ",
        "#{quality,jdbcType=INTEGER}, #{changeWhat,jdbcType=VARCHAR}, ",
        "#{oldPrice,jdbcType=DOUBLE})"
    })
    int insert(Product record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_product
     *
     * @mbg.generated Wed Nov 13 22:38:05 CST 2019
     */
    @Select({
        "select",
        "id, name, category, price, detail, create_date, update_date, create_by, update_by, ",
        "img, user_id, hits, faver, status, quality, change_what, old_price",
        "from t_product",
        "where id = #{id,jdbcType=VARCHAR}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="name", property="name", jdbcType=JdbcType.VARCHAR),
        @Result(column="category", property="category", jdbcType=JdbcType.VARCHAR),
        @Result(column="price", property="price", jdbcType=JdbcType.DOUBLE),
        @Result(column="detail", property="detail", jdbcType=JdbcType.VARCHAR),
        @Result(column="create_date", property="createDate", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="update_date", property="updateDate", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="create_by", property="createBy", jdbcType=JdbcType.VARCHAR),
        @Result(column="update_by", property="updateBy", jdbcType=JdbcType.VARCHAR),
        @Result(column="img", property="img", jdbcType=JdbcType.VARCHAR),
        @Result(column="user_id", property="userId", jdbcType=JdbcType.VARCHAR),
        @Result(column="hits", property="hits", jdbcType=JdbcType.INTEGER),
        @Result(column="faver", property="faver", jdbcType=JdbcType.INTEGER),
        @Result(column="status", property="status", jdbcType=JdbcType.VARCHAR),
        @Result(column="quality", property="quality", jdbcType=JdbcType.INTEGER),
        @Result(column="change_what", property="changeWhat", jdbcType=JdbcType.VARCHAR),
        @Result(column="old_price", property="oldPrice", jdbcType=JdbcType.DOUBLE)
    })
    Product selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_product
     *
     * @mbg.generated Wed Nov 13 22:38:05 CST 2019
     */
    @Select({
        "select",
        "id, name, category, price, detail, create_date, update_date, create_by, update_by, ",
        "img, user_id, hits, faver, status, quality, change_what, old_price",
        "from t_product"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="name", property="name", jdbcType=JdbcType.VARCHAR),
        @Result(column="category", property="category", jdbcType=JdbcType.VARCHAR),
        @Result(column="price", property="price", jdbcType=JdbcType.DOUBLE),
        @Result(column="detail", property="detail", jdbcType=JdbcType.VARCHAR),
        @Result(column="create_date", property="createDate", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="update_date", property="updateDate", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="create_by", property="createBy", jdbcType=JdbcType.VARCHAR),
        @Result(column="update_by", property="updateBy", jdbcType=JdbcType.VARCHAR),
        @Result(column="img", property="img", jdbcType=JdbcType.VARCHAR),
        @Result(column="user_id", property="userId", jdbcType=JdbcType.VARCHAR),
        @Result(column="hits", property="hits", jdbcType=JdbcType.INTEGER),
        @Result(column="faver", property="faver", jdbcType=JdbcType.INTEGER),
        @Result(column="status", property="status", jdbcType=JdbcType.VARCHAR),
        @Result(column="quality", property="quality", jdbcType=JdbcType.INTEGER),
        @Result(column="change_what", property="changeWhat", jdbcType=JdbcType.VARCHAR),
        @Result(column="old_price", property="oldPrice", jdbcType=JdbcType.DOUBLE)
    })
    List<Product> selectAll();

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_product
     *
     * @mbg.generated Wed Nov 13 22:38:05 CST 2019
     */
    @Update({
        "update t_product",
        "set name = #{name,jdbcType=VARCHAR},",
          "category = #{category,jdbcType=VARCHAR},",
          "price = #{price,jdbcType=DOUBLE},",
          "detail = #{detail,jdbcType=VARCHAR},",
          "create_date = #{createDate,jdbcType=TIMESTAMP},",
          "update_date = #{updateDate,jdbcType=TIMESTAMP},",
          "create_by = #{createBy,jdbcType=VARCHAR},",
          "update_by = #{updateBy,jdbcType=VARCHAR},",
          "img = #{img,jdbcType=VARCHAR},",
          "user_id = #{userId,jdbcType=VARCHAR},",
          "hits = #{hits,jdbcType=INTEGER},",
          "faver = #{faver,jdbcType=INTEGER},",
          "status = #{status,jdbcType=VARCHAR},",
          "quality = #{quality,jdbcType=INTEGER},",
          "change_what = #{changeWhat,jdbcType=VARCHAR},",
          "old_price = #{oldPrice,jdbcType=DOUBLE}",
        "where id = #{id,jdbcType=VARCHAR}"
    })
    int updateByPrimaryKey(Product record);
    
    @SelectProvider(type = com.barter.model.dyna.ProductDynaProvider.class, method = "selectProvider")
   	@Results({
        @Result(column="id", property="id", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="name", property="name", jdbcType=JdbcType.VARCHAR),
        @Result(column="category", property="category", jdbcType=JdbcType.VARCHAR),
        @Result(column="price", property="price", jdbcType=JdbcType.DOUBLE),
        @Result(column="detail", property="detail", jdbcType=JdbcType.VARCHAR),
        @Result(column="create_date", property="createDate", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="update_date", property="updateDate", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="create_by", property="createBy", jdbcType=JdbcType.VARCHAR),
        @Result(column="update_by", property="updateBy", jdbcType=JdbcType.VARCHAR),
        @Result(column="img", property="img", jdbcType=JdbcType.VARCHAR),
        @Result(column="user_id", property="userId", jdbcType=JdbcType.VARCHAR),
        @Result(column="hits", property="hits", jdbcType=JdbcType.INTEGER),
        @Result(column="faver", property="faver", jdbcType=JdbcType.INTEGER),
        @Result(column="status", property="status", jdbcType=JdbcType.VARCHAR),
        @Result(column="quality", property="quality", jdbcType=JdbcType.INTEGER),
        @Result(column="change_what", property="changeWhat", jdbcType=JdbcType.VARCHAR),
        @Result(column="old_price", property="oldPrice", jdbcType=JdbcType.DOUBLE)
    })
   	List<Product> findList(Map<String, Object> map);

   	@UpdateProvider(type = com.barter.model.dyna.ProductDynaProvider.class, method = "updateProvider")
   	Integer update(Map<String, Object> map);

   	@Results({
        @Result(column="id", property="id", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="name", property="name", jdbcType=JdbcType.VARCHAR),
        @Result(column="category", property="category", jdbcType=JdbcType.VARCHAR),
        @Result(column="price", property="price", jdbcType=JdbcType.DOUBLE),
        @Result(column="detail", property="detail", jdbcType=JdbcType.VARCHAR),
        @Result(column="create_date", property="createDate", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="update_date", property="updateDate", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="create_by", property="createBy", jdbcType=JdbcType.VARCHAR),
        @Result(column="update_by", property="updateBy", jdbcType=JdbcType.VARCHAR),
        @Result(column="img", property="img", jdbcType=JdbcType.VARCHAR),
        @Result(column="user_id", property="userId", jdbcType=JdbcType.VARCHAR),
        @Result(column="hits", property="hits", jdbcType=JdbcType.INTEGER),
        @Result(column="faver", property="faver", jdbcType=JdbcType.INTEGER),
        @Result(column="status", property="status", jdbcType=JdbcType.VARCHAR),
        @Result(column="quality", property="quality", jdbcType=JdbcType.INTEGER),
        @Result(column="change_what", property="changeWhat", jdbcType=JdbcType.VARCHAR),
        @Result(column="old_price", property="oldPrice", jdbcType=JdbcType.DOUBLE)
    })
   	@SelectProvider(type = com.barter.model.dyna.ProductDynaProvider.class, method = "searchList")
   	List<Product> search(String key);

   	// 删除
   	@Update({ "update t_product set img=''", "where proid = #{id,jdbcType=VARCHAR}" })
   	int deleImg(String id);
}