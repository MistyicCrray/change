package com.barter.mapper;

import com.barter.model.User;
import java.util.List;
import java.util.Map;

import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.type.JdbcType;

public interface UserMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_user
     *
     * @mbg.generated Wed Nov 06 22:49:20 CST 2019
     */
    @Delete({
        "delete from t_user",
        "where id = #{id,jdbcType=VARCHAR}"
    })
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_user
     *
     * @mbg.generated Wed Nov 06 22:49:20 CST 2019
     */
    @Insert({
        "insert into t_user (id, name, ",
        "login_name, contract, ",
        "birthday, address, ",
        "password, avatar, ",
        "gender, user_type, ",
        "last_login_time, create_time, ",
        "state, admin_id, ",
        "staff_id, parents_id)",
        "values (#{id,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, ",
        "#{loginName,jdbcType=VARCHAR}, #{contract,jdbcType=VARCHAR}, ",
        "#{birthday,jdbcType=DATE}, #{address,jdbcType=VARCHAR}, ",
        "#{password,jdbcType=VARCHAR}, #{avatar,jdbcType=VARCHAR}, ",
        "#{gender,jdbcType=INTEGER}, #{userType,jdbcType=INTEGER}, ",
        "#{lastLoginTime,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP}, ",
        "#{state,jdbcType=INTEGER}, #{adminId,jdbcType=VARCHAR}, ",
        "#{staffId,jdbcType=VARCHAR}, #{parentsId,jdbcType=VARCHAR})"
    })
    int insert(User record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_user
     *
     * @mbg.generated Wed Nov 06 22:49:20 CST 2019
     */
    @Select({
        "select",
        "id, name, login_name, contract, birthday, address, password, avatar, gender, ",
        "user_type, last_login_time, create_time, state, admin_id, staff_id, parents_id",
        "from t_user",
        "where id = #{id,jdbcType=VARCHAR}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="name", property="name", jdbcType=JdbcType.VARCHAR),
        @Result(column="login_name", property="loginName", jdbcType=JdbcType.VARCHAR),
        @Result(column="contract", property="contract", jdbcType=JdbcType.VARCHAR),
        @Result(column="birthday", property="birthday", jdbcType=JdbcType.DATE),
        @Result(column="address", property="address", jdbcType=JdbcType.VARCHAR),
        @Result(column="password", property="password", jdbcType=JdbcType.VARCHAR),
        @Result(column="avatar", property="avatar", jdbcType=JdbcType.VARCHAR),
        @Result(column="gender", property="gender", jdbcType=JdbcType.INTEGER),
        @Result(column="user_type", property="userType", jdbcType=JdbcType.INTEGER),
        @Result(column="last_login_time", property="lastLoginTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="state", property="state", jdbcType=JdbcType.INTEGER),
        @Result(column="admin_id", property="adminId", jdbcType=JdbcType.VARCHAR),
        @Result(column="staff_id", property="staffId", jdbcType=JdbcType.VARCHAR),
        @Result(column="parents_id", property="parentsId", jdbcType=JdbcType.VARCHAR)
    })
    User selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_user
     *
     * @mbg.generated Wed Nov 06 22:49:20 CST 2019
     */
    @Select({
        "select",
        "id, name, login_name, contract, birthday, address, password, avatar, gender, ",
        "user_type, last_login_time, create_time, state, admin_id, staff_id, parents_id",
        "from t_user"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="name", property="name", jdbcType=JdbcType.VARCHAR),
        @Result(column="login_name", property="loginName", jdbcType=JdbcType.VARCHAR),
        @Result(column="contract", property="contract", jdbcType=JdbcType.VARCHAR),
        @Result(column="birthday", property="birthday", jdbcType=JdbcType.DATE),
        @Result(column="address", property="address", jdbcType=JdbcType.VARCHAR),
        @Result(column="password", property="password", jdbcType=JdbcType.VARCHAR),
        @Result(column="avatar", property="avatar", jdbcType=JdbcType.VARCHAR),
        @Result(column="gender", property="gender", jdbcType=JdbcType.INTEGER),
        @Result(column="user_type", property="userType", jdbcType=JdbcType.INTEGER),
        @Result(column="last_login_time", property="lastLoginTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="state", property="state", jdbcType=JdbcType.INTEGER),
        @Result(column="admin_id", property="adminId", jdbcType=JdbcType.VARCHAR),
        @Result(column="staff_id", property="staffId", jdbcType=JdbcType.VARCHAR),
        @Result(column="parents_id", property="parentsId", jdbcType=JdbcType.VARCHAR)
    })
    List<User> selectAll();

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_user
     *
     * @mbg.generated Wed Nov 06 22:49:20 CST 2019
     */
    @Update({
        "update t_user",
        "set name = #{name,jdbcType=VARCHAR},",
          "login_name = #{loginName,jdbcType=VARCHAR},",
          "contract = #{contract,jdbcType=VARCHAR},",
          "birthday = #{birthday,jdbcType=DATE},",
          "address = #{address,jdbcType=VARCHAR},",
          "password = #{password,jdbcType=VARCHAR},",
          "avatar = #{avatar,jdbcType=VARCHAR},",
          "gender = #{gender,jdbcType=INTEGER},",
          "user_type = #{userType,jdbcType=INTEGER},",
          "last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},",
          "create_time = #{createTime,jdbcType=TIMESTAMP},",
          "state = #{state,jdbcType=INTEGER},",
          "admin_id = #{adminId,jdbcType=VARCHAR},",
          "staff_id = #{staffId,jdbcType=VARCHAR},",
          "parents_id = #{parentsId,jdbcType=VARCHAR}",
        "where id = #{id,jdbcType=VARCHAR}"
    })
    int updateByPrimaryKey(User record);
    
    @Select({
    	"select",
        "id, name, login_name, contract, birthday, address, password, avatar, gender, ",
        "user_type, last_login_time, create_time, state, admin_id, staff_id, parents_id",
        "from t_user",
        "where login_name = #{loginName,jdbcType=VARCHAR} and password = #{password,jdbcType=VARCHAR}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="name", property="name", jdbcType=JdbcType.VARCHAR),
        @Result(column="login_name", property="loginName", jdbcType=JdbcType.VARCHAR),
        @Result(column="contract", property="contract", jdbcType=JdbcType.VARCHAR),
        @Result(column="birthday", property="birthday", jdbcType=JdbcType.DATE),
        @Result(column="address", property="address", jdbcType=JdbcType.VARCHAR),
        @Result(column="password", property="password", jdbcType=JdbcType.VARCHAR),
        @Result(column="avatar", property="avatar", jdbcType=JdbcType.VARCHAR),
        @Result(column="gender", property="gender", jdbcType=JdbcType.INTEGER),
        @Result(column="user_type", property="userType", jdbcType=JdbcType.INTEGER),
        @Result(column="last_login_time", property="lastLoginTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="state", property="state", jdbcType=JdbcType.INTEGER),
        @Result(column="admin_id", property="adminId", jdbcType=JdbcType.VARCHAR),
        @Result(column="staff_id", property="staffId", jdbcType=JdbcType.VARCHAR),
        @Result(column="parents_id", property="parentsId", jdbcType=JdbcType.VARCHAR)
    })
    User findByLoginNameAndPassword(User user);

	List<User> findByDymic(Map<String, Object> map);

	void updateDymic(Map<String, Object> map);
}