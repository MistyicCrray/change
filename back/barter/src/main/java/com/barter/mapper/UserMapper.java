package com.barter.mapper;

import com.barter.model.User;
import java.util.List;
import java.util.Map;

import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

@Mapper
public interface UserMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_user
     *
     * @mbg.generated Thu Nov 07 00:27:46 CST 2019
     */
    @Delete({
        "delete from t_user",
        "where id = #{id,jdbcType=VARCHAR}"
    })
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_user
     *
     * @mbg.generated Thu Nov 07 00:27:46 CST 2019
     */
    @Insert({
        "insert into t_user (id, user_name, ",
        "password, gender, ",
        "img, create_time, ",
        "state, address, ",
        "phone, login_name, ",
        "email, user_type, ",
        "active_Code, active_Date, ",
        "last_Login_Time)",
        "values (#{id,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR}, ",
        "#{password,jdbcType=VARCHAR}, #{gender,jdbcType=VARCHAR}, ",
        "#{img,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, ",
        "#{state,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, ",
        "#{phone,jdbcType=VARCHAR}, #{loginName,jdbcType=VARCHAR}, ",
        "#{email,jdbcType=VARCHAR}, #{userType,jdbcType=VARCHAR}, ",
        "#{activeCode,jdbcType=VARCHAR}, #{activeDate,jdbcType=TIMESTAMP}, ",
        "#{lastLoginTime,jdbcType=TIMESTAMP})"
    })
    int insert(User record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_user
     *
     * @mbg.generated Thu Nov 07 00:27:46 CST 2019
     */
    @Select({
        "select",
        "id, user_name, password, gender, img, create_time, state, address, phone, login_name, ",
        "email, user_type, active_Code, active_Date, last_Login_Time",
        "from t_user",
        "where id = #{id,jdbcType=VARCHAR}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="user_name", property="userName", jdbcType=JdbcType.VARCHAR),
        @Result(column="password", property="password", jdbcType=JdbcType.VARCHAR),
        @Result(column="gender", property="gender", jdbcType=JdbcType.VARCHAR),
        @Result(column="img", property="img", jdbcType=JdbcType.VARCHAR),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="state", property="state", jdbcType=JdbcType.VARCHAR),
        @Result(column="address", property="address", jdbcType=JdbcType.VARCHAR),
        @Result(column="phone", property="phone", jdbcType=JdbcType.VARCHAR),
        @Result(column="login_name", property="loginName", jdbcType=JdbcType.VARCHAR),
        @Result(column="email", property="email", jdbcType=JdbcType.VARCHAR),
        @Result(column="user_type", property="userType", jdbcType=JdbcType.VARCHAR),
        @Result(column="active_Code", property="activeCode", jdbcType=JdbcType.VARCHAR),
        @Result(column="active_Date", property="activeDate", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="last_Login_Time", property="lastLoginTime", jdbcType=JdbcType.TIMESTAMP)
    })
    User selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_user
     *
     * @mbg.generated Thu Nov 07 00:27:46 CST 2019
     */
    @Select({
        "select",
        "id, user_name, password, gender, img, create_time, state, address, phone, login_name, ",
        "email, user_type, active_Code, active_Date, last_Login_Time",
        "from t_user"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="user_name", property="userName", jdbcType=JdbcType.VARCHAR),
        @Result(column="password", property="password", jdbcType=JdbcType.VARCHAR),
        @Result(column="gender", property="gender", jdbcType=JdbcType.VARCHAR),
        @Result(column="img", property="img", jdbcType=JdbcType.VARCHAR),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="state", property="state", jdbcType=JdbcType.VARCHAR),
        @Result(column="address", property="address", jdbcType=JdbcType.VARCHAR),
        @Result(column="phone", property="phone", jdbcType=JdbcType.VARCHAR),
        @Result(column="login_name", property="loginName", jdbcType=JdbcType.VARCHAR),
        @Result(column="email", property="email", jdbcType=JdbcType.VARCHAR),
        @Result(column="user_type", property="userType", jdbcType=JdbcType.VARCHAR),
        @Result(column="active_Code", property="activeCode", jdbcType=JdbcType.VARCHAR),
        @Result(column="active_Date", property="activeDate", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="last_Login_Time", property="lastLoginTime", jdbcType=JdbcType.TIMESTAMP)
    })
    List<User> selectAll();

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_user
     *
     * @mbg.generated Thu Nov 07 00:27:46 CST 2019
     */
    @Update({
        "update t_user",
        "set user_name = #{userName,jdbcType=VARCHAR},",
          "password = #{password,jdbcType=VARCHAR},",
          "gender = #{gender,jdbcType=VARCHAR},",
          "img = #{img,jdbcType=VARCHAR},",
          "create_time = #{createTime,jdbcType=TIMESTAMP},",
          "state = #{state,jdbcType=VARCHAR},",
          "address = #{address,jdbcType=VARCHAR},",
          "phone = #{phone,jdbcType=VARCHAR},",
          "login_name = #{loginName,jdbcType=VARCHAR},",
          "email = #{email,jdbcType=VARCHAR},",
          "user_type = #{userType,jdbcType=VARCHAR},",
          "active_Code = #{activeCode,jdbcType=VARCHAR},",
          "active_Date = #{activeDate,jdbcType=TIMESTAMP},",
          "last_Login_Time = #{lastLoginTime,jdbcType=TIMESTAMP}",
        "where id = #{id,jdbcType=VARCHAR}"
    })
    int updateByPrimaryKey(User record);

    @Select({
        "select",
        "id, user_name, password, gender, img, create_time, state, address, phone, login_name, ",
        "email, user_type, active_Code, active_Date, last_Login_Time",
        "from t_user ",
        "where login_name = #{loginName,jdbcType=VARCHAR} and password = #{password,jdbcType=VARCHAR}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="user_name", property="userName", jdbcType=JdbcType.VARCHAR),
        @Result(column="password", property="password", jdbcType=JdbcType.VARCHAR),
        @Result(column="gender", property="gender", jdbcType=JdbcType.VARCHAR),
        @Result(column="img", property="img", jdbcType=JdbcType.VARCHAR),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="state", property="state", jdbcType=JdbcType.VARCHAR),
        @Result(column="address", property="address", jdbcType=JdbcType.VARCHAR),
        @Result(column="phone", property="phone", jdbcType=JdbcType.VARCHAR),
        @Result(column="login_name", property="loginName", jdbcType=JdbcType.VARCHAR),
        @Result(column="email", property="email", jdbcType=JdbcType.VARCHAR),
        @Result(column="user_type", property="userType", jdbcType=JdbcType.VARCHAR),
        @Result(column="active_Code", property="activeCode", jdbcType=JdbcType.VARCHAR),
        @Result(column="active_Date", property="activeDate", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="last_Login_Time", property="lastLoginTime", jdbcType=JdbcType.TIMESTAMP)
    })
    User findByLoginNameAndPassword(User user);

	@SelectProvider(method="selectProvider", type = com.barter.model.dyna.UserDynaProvider.class)
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="user_name", property="userName", jdbcType=JdbcType.VARCHAR),
        @Result(column="password", property="password", jdbcType=JdbcType.VARCHAR),
        @Result(column="gender", property="gender", jdbcType=JdbcType.VARCHAR),
        @Result(column="img", property="img", jdbcType=JdbcType.VARCHAR),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="state", property="state", jdbcType=JdbcType.VARCHAR),
        @Result(column="address", property="address", jdbcType=JdbcType.VARCHAR),
        @Result(column="phone", property="phone", jdbcType=JdbcType.VARCHAR),
        @Result(column="login_name", property="loginName", jdbcType=JdbcType.VARCHAR),
        @Result(column="email", property="email", jdbcType=JdbcType.VARCHAR),
        @Result(column="user_type", property="userType", jdbcType=JdbcType.VARCHAR),
        @Result(column="active_Code", property="activeCode", jdbcType=JdbcType.VARCHAR),
        @Result(column="active_Date", property="activeDate", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="last_Login_Time", property="lastLoginTime", jdbcType=JdbcType.TIMESTAMP)
    })
	List<User> findByDymic(Map<String, Object> map);
	
    @Select({
        "select",
        "id, user_name, password, gender, img, create_time, state, address, phone, login_name, ",
        "email, user_type, active_Code, active_Date, last_Login_Time",
        "from t_user ",
        "where login_name = #{loginName,jdbcType=VARCHAR}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="user_name", property="userName", jdbcType=JdbcType.VARCHAR),
        @Result(column="password", property="password", jdbcType=JdbcType.VARCHAR),
        @Result(column="gender", property="gender", jdbcType=JdbcType.VARCHAR),
        @Result(column="img", property="img", jdbcType=JdbcType.VARCHAR),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="state", property="state", jdbcType=JdbcType.VARCHAR),
        @Result(column="address", property="address", jdbcType=JdbcType.VARCHAR),
        @Result(column="phone", property="phone", jdbcType=JdbcType.VARCHAR),
        @Result(column="login_name", property="loginName", jdbcType=JdbcType.VARCHAR),
        @Result(column="email", property="email", jdbcType=JdbcType.VARCHAR),
        @Result(column="user_type", property="userType", jdbcType=JdbcType.VARCHAR),
        @Result(column="active_Code", property="activeCode", jdbcType=JdbcType.VARCHAR),
        @Result(column="active_Date", property="activeDate", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="last_Login_Time", property="lastLoginTime", jdbcType=JdbcType.TIMESTAMP)
    })
    User selectByLoginName(String loginname);
    
    @UpdateProvider(type = com.barter.model.dyna.UserDynaProvider.class, method = "updateProvider")
	void updateDymic(Map<String, Object> map);

}